steps:

# Step 0
# Create bucket in europe-west9 region 
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud storage buckets create gs://demo1frontendtleboucq --location=EUROPE-WEST9

# Step 1
# Open the bucket viewer to the public internet
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gsutil iam ch allUsers:objectViewer gs://demo1frontendtleboucq

# Step 2
# Reserve an external static IP address
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['compute', 'addresses', 'create', 'lb-ipv4-1', '--ip-version=IPV4', '--network-tier=PREMIUM', '--global']

# Step 3
# Create HTTP health check
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud compute health-checks create http http-basic-check --port 80

# Step 4
# Create backend bucket to be used by our LB
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud compute backend-buckets create web-backend-bucket --gcs-bucket-name demo1frontendtleboucq


# Step 5
# Create URL map to route incoming traffic to our backend bucket
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud compute url-maps create web-map-http --default-backend-bucket web-backend-bucket


# Step 6
# Create a target HTTP proxy to route incoming requests to our URL map
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud compute target-http-proxies create http-lb-proxy --url-map web-map-http


# Step 7
# Create a global forwarding rule to route incoming requests to the proxy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['compute', 'forwarding-rules', 'create', 'http-content-rule', 
    '--load-balancing-scheme=EXTERNAL',
    '--address=lb-ipv4-1',
    '--global',
    '--target-http-proxy=http-lb-proxy',
    '--ports=80'
            ]
      
